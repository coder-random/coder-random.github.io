{"name":"算法与数据结构","slug":"算法与数据结构","count":3,"postlist":[{"title":"快速排序（Quick Sort）","uid":"128d5f401a6627e4435b6e43e76ac072","slug":"AlgorithmsDataStructures/排序算法/快速排序","date":"2025-07-18T04:00:00.000Z","updated":"2025-07-28T13:30:30.656Z","comments":true,"path":"api/articles/AlgorithmsDataStructures/排序算法/快速排序.json","keywords":null,"cover":null,"text":"快速排序（Quick Sort）快速排序（Quick Sort）是一种极其高效的分治排序算法，也是实际应用中最常用的排序算法之一。它通过选择一个“基准”元素，将...","permalink":"/post/AlgorithmsDataStructures/排序算法/快速排序","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"算法与数据结构","slug":"算法与数据结构","count":3,"path":"api/categories/算法与数据结构.json"}],"tags":[{"name":"排序","slug":"排序","count":2,"path":"api/tags/排序.json"}],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"冒泡排序（Bubble Sort）","uid":"dea48bae008655416810ebc549cb2ffd","slug":"AlgorithmsDataStructures/排序算法/冒泡排序","date":"2025-07-18T04:00:00.000Z","updated":"2025-07-28T13:31:45.257Z","comments":true,"path":"api/articles/AlgorithmsDataStructures/排序算法/冒泡排序.json","keywords":null,"cover":null,"text":"冒泡排序（Bubble Sort）冒泡排序是一种简单直观的排序算法。它重复地遍历待排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。遍历数列的工...","permalink":"/post/AlgorithmsDataStructures/排序算法/冒泡排序","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"算法与数据结构","slug":"算法与数据结构","count":3,"path":"api/categories/算法与数据结构.json"}],"tags":[{"name":"排序","slug":"排序","count":2,"path":"api/tags/排序.json"}],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"算法复杂度一览表","uid":"ffcfdc2657e27f0f1d5678cd568c11ab","slug":"AlgorithmsDataStructures/其他/算法复杂度一览表","date":"2025-07-14T16:00:00.000Z","updated":"2025-07-28T11:45:38.854Z","comments":true,"path":"api/articles/AlgorithmsDataStructures/其他/算法复杂度一览表.json","keywords":null,"cover":null,"text":"本文为你系统梳理常见的时间复杂度与空间复杂度，帮助你快速判断算法的性能优劣。 你将看到从 O(1) 常数级别到 O(n!) 阶乘级别的各类复杂度，以及它们在实际算法中的典型例子。 通过图示、表格与实例，我们将帮助你构建起扎实的复杂度分析直觉，为今后的算法设计与面试笔试打下坚实基础。 不论你是初学者还是进阶选手，这份复杂度一览表都值得你收藏与反复参考。 ...","permalink":"/post/AlgorithmsDataStructures/其他/算法复杂度一览表","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"算法与数据结构","slug":"算法与数据结构","count":3,"path":"api/categories/算法与数据结构.json"}],"tags":[],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}