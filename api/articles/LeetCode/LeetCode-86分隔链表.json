{"title":"LeetCode-86分隔链表","uid":"3db473fdf9b2739246e485648c59f7e1","slug":"LeetCode/LeetCode-86分隔链表","date":"2025-07-21T08:00:00.000Z","updated":"2025-07-28T11:46:26.413Z","comments":true,"path":"api/articles/LeetCode/LeetCode-86分隔链表.json","keywords":null,"cover":null,"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目链接：<br><a href=\"https://leetcode.cn/problems/partition-list/\">LeetCode 86. Partition List</a></p></blockquote>\n<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>给定一个链表 <code>head</code> 和一个特定值 <code>x</code>，请将所有小于 <code>x</code> 的节点排在大于或等于 <code>x</code> 的节点之前。</p>\n<p>你应该<strong>保留原始相对顺序</strong>。</p>\n<h3 id=\"示例：\"><a href=\"#示例：\" class=\"headerlink\" title=\"示例：\"></a>示例：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：head = 1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;2, x = 3</span><br><span class=\"line\">输出：1-&gt;2-&gt;2-&gt;4-&gt;3-&gt;5</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"解法一：模拟\"><a href=\"#解法一：模拟\" class=\"headerlink\" title=\"解法一：模拟\"></a>解法一：模拟</h2><p>我们将链表划分为两个部分：</p>\n<ul>\n<li>一个链表保存 <strong>小于 x 的节点</strong>（记为 <code>left</code> 链表）；</li>\n<li>一个链表保存 <strong>大于等于 x 的节点</strong>（记为 <code>right</code> 链表）；</li>\n<li>最后将两个链表拼接起来。</li>\n</ul>\n<h3 id=\"关键点：\"><a href=\"#关键点：\" class=\"headerlink\" title=\"关键点：\"></a>关键点：</h3><ul>\n<li>使用 <code>leftHead</code> 和 <code>leftTail</code> 维护左边链表；</li>\n<li>使用 <code>rightHead</code> 和 <code>rightTail</code> 维护右边链表；</li>\n<li>使用 <code>head-&gt;next = nullptr</code> 断开原链表，避免成环。</li>\n</ul>\n<hr>\n<h2 id=\"动图理解（文字版）\"><a href=\"#动图理解（文字版）\" class=\"headerlink\" title=\"动图理解（文字版）\"></a>动图理解（文字版）</h2><p>假设原链表为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head: 1 → 4 → 3 → 2 → 5 → 2</span><br><span class=\"line\">x = 3</span><br></pre></td></tr></table></figure>\n\n<p>处理过程如下：</p>\n<ul>\n<li>遇到 1 → 放入 left 链表</li>\n<li>遇到 4 → 放入 right 链表</li>\n<li>遇到 3 → 放入 right 链表</li>\n<li>遇到 2 → 放入 left 链表</li>\n<li>遇到 5 → 放入 right 链表</li>\n<li>遇到 2 → 放入 left 链表</li>\n</ul>\n<p>最终：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">left: 1 → 2 → 2</span><br><span class=\"line\">right: 4 → 3 → 5</span><br><span class=\"line\">结果: 1 → 2 → 2 → 4 → 3 → 5</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">ListNode* <span class=\"title\">partition</span><span class=\"params\">(ListNode* head, <span class=\"type\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 定义左右两个链表的头尾指针</span></span><br><span class=\"line\">        ListNode *leftHead = <span class=\"literal\">nullptr</span>, *leftTail = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">        ListNode *rightHead = <span class=\"literal\">nullptr</span>, *rightTail = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (head != <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">            ListNode* next = head-&gt;next;  <span class=\"comment\">// 保存下一个节点</span></span><br><span class=\"line\">            head-&gt;next = <span class=\"literal\">nullptr</span>;         <span class=\"comment\">// 当前节点断链，避免成环</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (head-&gt;val &lt; x) &#123;          <span class=\"comment\">// 小于 x 放左边</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (leftHead == <span class=\"literal\">nullptr</span>)  <span class=\"comment\">// 初始化左链表</span></span><br><span class=\"line\">                    leftHead = head;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    leftTail-&gt;next = head;</span><br><span class=\"line\">                leftTail = head;          <span class=\"comment\">// 移动尾指针</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;                      <span class=\"comment\">// 大于等于 x 放右边</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (rightHead == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">                    rightHead = head;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    rightTail-&gt;next = head;</span><br><span class=\"line\">                rightTail = head;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            head = next;  <span class=\"comment\">// 处理下一个节点</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 连接左右链表</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (leftHead == <span class=\"literal\">nullptr</span>) <span class=\"keyword\">return</span> rightHead;</span><br><span class=\"line\">        leftTail-&gt;next = rightHead;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> leftHead;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"边界处理要点\"><a href=\"#边界处理要点\" class=\"headerlink\" title=\"边界处理要点\"></a>边界处理要点</h2><ol>\n<li>如果原链表为空（head 为 nullptr），函数会自动返回 nullptr。</li>\n<li>如果所有节点都 ≥ x，则 leftHead 为 nullptr，直接返回 rightHead。</li>\n<li><code>head-&gt;next = nullptr;</code> 非常关键，避免原链表中断开或形成环。</li>\n<li>左链表和右链表保持原始节点顺序（因为只操作 <code>next</code>）。</li>\n</ol>\n<hr>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><table>\n<thead>\n<tr>\n<th>输入</th>\n<th>x</th>\n<th>输出</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;2</code></td>\n<td>3</td>\n<td><code>1-&gt;2-&gt;2-&gt;4-&gt;3-&gt;5</code></td>\n</tr>\n<tr>\n<td><code>2-&gt;1</code></td>\n<td>2</td>\n<td><code>1-&gt;2</code></td>\n</tr>\n<tr>\n<td><code>5-&gt;6-&gt;7</code></td>\n<td>4</td>\n<td><code>5-&gt;6-&gt;7</code></td>\n</tr>\n<tr>\n<td><code>1-&gt;2-&gt;3</code></td>\n<td>10</td>\n<td><code>1-&gt;2-&gt;3</code></td>\n</tr>\n<tr>\n<td>空链表 <code>nullptr</code></td>\n<td>1</td>\n<td><code>nullptr</code></td>\n</tr>\n</tbody></table>\n","text":" 题目链接：LeetCode 86. Partition List 题目描述给定一个链表 head 和一个特定值 x，请将所有小于 x 的节点排在大于或等于 x...","permalink":"/post/LeetCode/LeetCode-86分隔链表","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":8,"path":"api/tags/LeetCode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">题目描述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B%EF%BC%9A\"><span class=\"toc-text\">示例：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%B8%80%EF%BC%9A%E6%A8%A1%E6%8B%9F\"><span class=\"toc-text\">解法一：模拟</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E9%94%AE%E7%82%B9%EF%BC%9A\"><span class=\"toc-text\">关键点：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E5%9B%BE%E7%90%86%E8%A7%A3%EF%BC%88%E6%96%87%E5%AD%97%E7%89%88%EF%BC%89\"><span class=\"toc-text\">动图理解（文字版）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%B9%E7%95%8C%E5%A4%84%E7%90%86%E8%A6%81%E7%82%B9\"><span class=\"toc-text\">边界处理要点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol>","author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"LeetCode-34在排序数组中查找元素的第一个和最后一个位置","uid":"c8e3ec39a2bdb46713f60afe507c2dde","slug":"LeetCode/LeetCode-34在排序数组中查找元素的第一个和最后一个位置","date":"2025-07-22T08:00:00.000Z","updated":"2025-07-22T11:50:07.759Z","comments":true,"path":"api/articles/LeetCode/LeetCode-34在排序数组中查找元素的第一个和最后一个位置.json","keywords":null,"cover":null,"text":" 题目链接： LeetCode 34. Find First and Last Position of Element in Sorted Array 题目描述...","permalink":"/post/LeetCode/LeetCode-34在排序数组中查找元素的第一个和最后一个位置","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":8,"path":"api/tags/LeetCode.json"}],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"LeetCode-2两数相加","uid":"2e0b75e87a11aa9fe9b055b9179f2839","slug":"LeetCode/LeetCode-2两数相加","date":"2025-07-20T08:00:00.000Z","updated":"2025-07-22T11:47:56.039Z","comments":true,"path":"api/articles/LeetCode/LeetCode-2两数相加.json","keywords":null,"cover":null,"text":" 题目链接： LeetCode 2. Add Two Numbers） 题目描述给你两个 非空 的链表 l1 和 l2，它们表示两个 非负整数，每位数字都是逆序...","permalink":"/post/LeetCode/LeetCode-2两数相加","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":8,"path":"api/tags/LeetCode.json"}],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}