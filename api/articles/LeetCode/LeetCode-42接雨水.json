{"title":"LeetCode-42接雨水","uid":"50923e38d6714eed297b6e077bc9df21","slug":"LeetCode/LeetCode-42接雨水","date":"2025-07-16T08:00:00.000Z","updated":"2025-07-19T11:56:57.730Z","comments":true,"path":"api/articles/LeetCode/LeetCode-42接雨水.json","keywords":null,"cover":null,"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目链接：<br><a href=\"https://leetcode.cn/problems/trapping-rain-water/description/\">LeetCode - 42. Trapping Rain Water</a></p></blockquote>\n<h2 id=\"解法一：相向双指针\"><a href=\"#解法一：相向双指针\" class=\"headerlink\" title=\"解法一：相向双指针\"></a>解法一：相向双指针</h2><h3 id=\"题目思路：双指针法-局部最值\"><a href=\"#题目思路：双指针法-局部最值\" class=\"headerlink\" title=\"题目思路：双指针法 + 局部最值\"></a>题目思路：双指针法 + 局部最值</h3><p>本题的目标是，给定一个整数数组 <code>height</code>，其中每个元素代表一个单位宽度的柱子的高度，求这些柱子可以接住多少单位的雨水。</p>\n<h3 id=\"算法核心思想：\"><a href=\"#算法核心思想：\" class=\"headerlink\" title=\"算法核心思想：\"></a>算法核心思想：</h3><p>我们使用 <strong>双指针法</strong> 从两边向中间遍历，同时记录当前左右的最大高度 <code>tL</code> 和 <code>rL</code>。每次比较左右最大值，谁小就移动谁的指针，这样可以确保当前指针所处位置可以接的雨水只依赖于较小的一边。</p>\n<h3 id=\"定义：\"><a href=\"#定义：\" class=\"headerlink\" title=\"定义：\"></a>定义：</h3><ul>\n<li><code>l</code>, <code>r</code>: 左右指针，初始指向数组两端。</li>\n<li><code>tL</code>, <code>rL</code>: 当前指针左侧和右侧的最大高度。</li>\n<li><code>ans</code>: 最终答案，即累计接住的雨水量。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">trap</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; height)</span> </span>&#123;</span><br><span class=\"line\">\t    <span class=\"type\">int</span> n = height.<span class=\"built_in\">size</span>();        <span class=\"comment\">// 柱子的总数</span></span><br><span class=\"line\">\t    <span class=\"type\">int</span> l = <span class=\"number\">0</span>, r = n - <span class=\"number\">1</span>;         <span class=\"comment\">// 左右指针</span></span><br><span class=\"line\">\t    <span class=\"type\">int</span> tL = <span class=\"number\">0</span>, rL = <span class=\"number\">0</span>;           <span class=\"comment\">// 左右的最高柱子</span></span><br><span class=\"line\">\t    <span class=\"type\">int</span> ans = <span class=\"number\">0</span>;                  <span class=\"comment\">// 接住的雨水总量</span></span><br><span class=\"line\">\t    </span><br><span class=\"line\">\t    <span class=\"keyword\">while</span> (l &lt; r) &#123;</span><br><span class=\"line\">\t        <span class=\"comment\">// 更新左右最大高度</span></span><br><span class=\"line\">\t        tL = <span class=\"built_in\">max</span>(tL, height[l]);</span><br><span class=\"line\">\t        rL = <span class=\"built_in\">max</span>(rL, height[r]);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        <span class=\"comment\">// 谁的最大高度更小，就看谁那边能不能接水</span></span><br><span class=\"line\">\t        <span class=\"keyword\">if</span> (tL &lt; rL) &#123;</span><br><span class=\"line\">\t            ans += tL - height[l];  <span class=\"comment\">// 左边接水 = 左最大高度 - 当前高度</span></span><br><span class=\"line\">\t            l++;                    <span class=\"comment\">// 移动左指针</span></span><br><span class=\"line\">\t        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t            ans += rL - height[r];  <span class=\"comment\">// 右边接水 = 右最大高度 - 当前高度</span></span><br><span class=\"line\">\t            r--;                    <span class=\"comment\">// 移动右指针</span></span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"示例分析：\"><a href=\"#示例分析：\" class=\"headerlink\" title=\"示例分析：\"></a>示例分析：</h3><p>输入：<code>height = [0,1,0,2,1,0,1,3,2,1,2,1]</code><br>输出：<code>6</code></p>\n<p>解释：</p>\n<p>接水的区域如下图所示（柱状图视角）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    █ </span><br><span class=\"line\">█   █ █</span><br><span class=\"line\">█ █ ███</span><br></pre></td></tr></table></figure>\n\n<p>接水量：<code>1 + 1 + 2 + 1 + 1 = 6</code></p>\n","text":" 题目链接：LeetCode - 42. Trapping Rain Water 解法一：相向双指针题目思路：双指针法 + 局部最值本题的目标是，给定一个整数数...","permalink":"/post/LeetCode/LeetCode-42接雨水","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":8,"path":"api/tags/LeetCode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%B8%80%EF%BC%9A%E7%9B%B8%E5%90%91%E5%8F%8C%E6%8C%87%E9%92%88\"><span class=\"toc-text\">解法一：相向双指针</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%80%9D%E8%B7%AF%EF%BC%9A%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95-%E5%B1%80%E9%83%A8%E6%9C%80%E5%80%BC\"><span class=\"toc-text\">题目思路：双指针法 + 局部最值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%A0%B8%E5%BF%83%E6%80%9D%E6%83%B3%EF%BC%9A\"><span class=\"toc-text\">算法核心思想：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%EF%BC%9A\"><span class=\"toc-text\">定义：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">示例分析：</span></a></li></ol></li></ol>","author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"LeetCode-2367等差三元组的数目","uid":"f01cc273b0b1b737816c95524ea0b79c","slug":"LeetCode/LeetCode-2367等差三元组的数目","date":"2025-07-17T08:00:00.000Z","updated":"2025-07-28T13:32:30.769Z","comments":true,"path":"api/articles/LeetCode/LeetCode-2367等差三元组的数目.json","keywords":null,"cover":null,"text":" 题目链接：LeetCode - 2367.Number of Arithmetic Triplets 解法一：三指针题目描述给定一个严格递增的整数数组 num...","permalink":"/post/LeetCode/LeetCode-2367等差三元组的数目","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":8,"path":"api/tags/LeetCode.json"}],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"算法复杂度一览表","uid":"ffcfdc2657e27f0f1d5678cd568c11ab","slug":"AlgorithmsDataStructures/其他/算法复杂度一览表","date":"2025-07-14T16:00:00.000Z","updated":"2025-07-28T11:45:38.854Z","comments":true,"path":"api/articles/AlgorithmsDataStructures/其他/算法复杂度一览表.json","keywords":null,"cover":null,"text":"本文为你系统梳理常见的时间复杂度与空间复杂度，帮助你快速判断算法的性能优劣。 你将看到从 O(1) 常数级别到 O(n!) 阶乘级别的各类复杂度，以及它们在实际算法中的典型例子。 通过图示、表格与实例，我们将帮助你构建起扎实的复杂度分析直觉，为今后的算法设计与面试笔试打下坚实基础。 不论你是初学者还是进阶选手，这份复杂度一览表都值得你收藏与反复参考。 ...","permalink":"/post/AlgorithmsDataStructures/其他/算法复杂度一览表","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"算法与数据结构","slug":"算法与数据结构","count":3,"path":"api/categories/算法与数据结构.json"}],"tags":[],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}