{"title":"LeetCode-2两数相加","uid":"2e0b75e87a11aa9fe9b055b9179f2839","slug":"LeetCode/LeetCode-2两数相加","date":"2025-07-20T08:00:00.000Z","updated":"2025-07-28T13:32:23.680Z","comments":true,"path":"api/articles/LeetCode/LeetCode-2两数相加.json","keywords":null,"cover":null,"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目链接：<br><a href=\"https://leetcode.cn/problems/add-two-numbers/description/\"> LeetCode 2. Add Two Numbers）</a></p></blockquote>\n<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>给你两个 <strong>非空</strong> 的链表 <code>l1</code> 和 <code>l2</code>，它们表示两个 <strong>非负整数</strong>，<strong>每位数字都是逆序存储</strong> 的，每个节点只存储一位数字。</p>\n<p>请你将这两个数相加，并以同样形式返回一个代表和的链表。</p>\n<h3 id=\"示例：\"><a href=\"#示例：\" class=\"headerlink\" title=\"示例：\"></a>示例：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：l1 = [2,4,3], l2 = [5,6,4]</span><br><span class=\"line\">输出：[7,0,8]</span><br><span class=\"line\">解释：342 + 465 = 807</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"解法一：模拟\"><a href=\"#解法一：模拟\" class=\"headerlink\" title=\"解法一：模拟\"></a>解法一：模拟</h2><p>由于两个数是以<strong>逆序</strong>存储的，所以我们可以从两个链表的头部开始逐位相加：</p>\n<ol>\n<li>模拟<strong>竖式加法</strong>：从低位开始相加（即从链表头开始），依次处理进位。</li>\n<li>每次处理一位，并创建一个新节点表示该位结果。</li>\n<li>若最后还有<strong>进位</strong>，则需要额外加一个新节点。</li>\n</ol>\n<hr>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><ol>\n<li>定义两个指针：<code>head</code> 为结果链表头，<code>cur</code> 为当前操作指针；</li>\n<li>定义变量 <code>carry = 0</code> 表示进位；</li>\n<li>遍历 <code>l1</code> 和 <code>l2</code> 的每一位数字：<ul>\n<li>若某一链表已结束，则看作是 0；</li>\n<li>计算当前位 <code>sum = val1 + val2 + carry</code>；</li>\n<li>当前位值为 <code>sum % 10</code>，进位为 <code>sum / 10</code>；</li>\n</ul>\n</li>\n<li>如果最后进位 <code>carry &gt; 0</code>，则加上一个新节点；</li>\n<li>返回结果链表头 <code>head</code>。</li>\n</ol>\n<hr>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">ListNode* <span class=\"title\">addTwoNumbers</span><span class=\"params\">(ListNode* l1, ListNode* l2)</span> </span>&#123;</span><br><span class=\"line\">        ListNode *head = <span class=\"literal\">nullptr</span>, *cur = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> carry = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 遍历 l1 和 l2 的每一位</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> sum, val; l1 != <span class=\"literal\">nullptr</span> || l2 != <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">             l1 = (l1 == <span class=\"literal\">nullptr</span> ? <span class=\"literal\">nullptr</span> : l1-&gt;next),</span><br><span class=\"line\">             l2 = (l2 == <span class=\"literal\">nullptr</span> ? <span class=\"literal\">nullptr</span> : l2-&gt;next)) &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 当前位和 = l1值 + l2值 + 上一位进位</span></span><br><span class=\"line\">            sum = (l1 ? l1-&gt;val : <span class=\"number\">0</span>) + (l2 ? l2-&gt;val : <span class=\"number\">0</span>) + carry;</span><br><span class=\"line\">            val = sum % <span class=\"number\">10</span>;     <span class=\"comment\">// 当前位数字</span></span><br><span class=\"line\">            carry = sum / <span class=\"number\">10</span>;   <span class=\"comment\">// 进位</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 创建节点并接入链表</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (head == <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">                head = <span class=\"keyword\">new</span> <span class=\"built_in\">ListNode</span>(val);</span><br><span class=\"line\">                cur = head;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                cur-&gt;next = <span class=\"keyword\">new</span> <span class=\"built_in\">ListNode</span>(val);</span><br><span class=\"line\">                cur = cur-&gt;next;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 如果还有进位，最后加一位</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (carry == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            cur-&gt;next = <span class=\"keyword\">new</span> <span class=\"built_in\">ListNode</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"边界处理细节\"><a href=\"#边界处理细节\" class=\"headerlink\" title=\"边界处理细节\"></a>边界处理细节</h2><table>\n<thead>\n<tr>\n<th>情况</th>\n<th>是否处理？</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>l1</code> 或 <code>l2</code> 为 nullptr</td>\n<td>✅</td>\n<td>使用三元运算符 <code>(l1 ? l1-&gt;val : 0)</code> 处理</td>\n</tr>\n<tr>\n<td>两链表长度不同</td>\n<td>✅</td>\n<td>遍历到最长链表结束即可</td>\n</tr>\n<tr>\n<td>最后一位有进位</td>\n<td>✅</td>\n<td><code>if (carry == 1)</code> 添加尾部节点</td>\n</tr>\n</tbody></table>\n<hr>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><table>\n<thead>\n<tr>\n<th>l1</th>\n<th>l2</th>\n<th>输出结果</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[2,4,3]</code></td>\n<td><code>[5,6,4]</code></td>\n<td><code>[7,0,8]</code></td>\n<td>342 + 465 &#x3D; 807</td>\n</tr>\n<tr>\n<td><code>[0]</code></td>\n<td><code>[0]</code></td>\n<td><code>[0]</code></td>\n<td>简单零值</td>\n</tr>\n<tr>\n<td><code>[9,9,9]</code></td>\n<td><code>[1]</code></td>\n<td><code>[0,0,0,1]</code></td>\n<td>999 + 1 &#x3D; 1000</td>\n</tr>\n</tbody></table>\n","text":" 题目链接： LeetCode 2. Add Two Numbers） 题目描述给你两个 非空 的链表 l1 和 l2，它们表示两个 非负整数，每位数字都是逆序...","permalink":"/post/LeetCode/LeetCode-2两数相加","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":8,"path":"api/tags/LeetCode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">题目描述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B%EF%BC%9A\"><span class=\"toc-text\">示例：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%B8%80%EF%BC%9A%E6%A8%A1%E6%8B%9F\"><span class=\"toc-text\">解法一：模拟</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">步骤</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%B9%E7%95%8C%E5%A4%84%E7%90%86%E7%BB%86%E8%8A%82\"><span class=\"toc-text\">边界处理细节</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol>","author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"LeetCode-86分隔链表","uid":"3db473fdf9b2739246e485648c59f7e1","slug":"LeetCode/LeetCode-86分隔链表","date":"2025-07-21T08:00:00.000Z","updated":"2025-07-28T13:32:28.896Z","comments":true,"path":"api/articles/LeetCode/LeetCode-86分隔链表.json","keywords":null,"cover":null,"text":" 题目链接：LeetCode 86. Partition List 题目描述给定一个链表 head 和一个特定值 x，请将所有小于 x 的节点排在大于或等于 x...","permalink":"/post/LeetCode/LeetCode-86分隔链表","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":8,"path":"api/tags/LeetCode.json"}],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"LeetCode-21合并两个有序链表","uid":"ceb487e3836d4783d6609198e2dba7d6","slug":"LeetCode/LeetCode-21合并两个有序链表","date":"2025-07-19T08:00:00.000Z","updated":"2025-07-19T11:55:53.724Z","comments":true,"path":"api/articles/LeetCode/LeetCode-21合并两个有序链表.json","keywords":null,"cover":null,"text":" 题目链接：LeetCode 21. Merge Two Sorted Lists 题目描述给你两个 升序 链表 list1 和 list2，请将它们合并为一个...","permalink":"/post/LeetCode/LeetCode-21合并两个有序链表","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":8,"path":"api/tags/LeetCode.json"}],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}