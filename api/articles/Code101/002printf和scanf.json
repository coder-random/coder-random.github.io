{"title":"printf和scanf","uid":"49e2daee4c328ade8673d6b073a536ac","slug":"Code101/002printf和scanf","date":"2025-07-27T16:00:00.000Z","updated":"2025-07-28T14:13:43.585Z","comments":true,"path":"api/articles/Code101/002printf和scanf.json","keywords":null,"cover":"/images/article-cover/Code101.png","content":"<details class=\"custom-details\">\n<summary>《Code101-C语言基础》目录</summary>\n<p><ul>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F000%E4%BB%8E%E9%9B%B6%E5%88%B0%E4%B8%80%EF%BC%9A%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A0%82C%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8%E8%AF%BE\">先导课 从零到一：你的第一堂C语言入门课</a></li>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F001%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F\">第一课 变量和常量</a></li>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F002printf%E5%92%8Cscanf\">第二课 printf和scanf</a></li>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F003putchar%E5%92%8Cgetchar\">第三课 putchar和getchar</a></li>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F004C%E8%AF%AD%E8%A8%80%E8%BF%90%E7%AE%97%E7%AC%A6\">第四课 C语言运算符</a></li>\n</ul>\n</p>\n</details>\n<h1 id=\"printf函数\"><a href=\"#printf函数\" class=\"headerlink\" title=\"printf函数\"></a>printf函数</h1><ul>\n<li>printf函数称之为格式输出函数,方法名称的最后一个字母f表示format。其功能是按照用户指定的格式,把指定的数据输出到屏幕上</li>\n<li>printf函数的调用格式为:<ul>\n<li><code>printf(&quot;格式控制字符串&quot;,输出项列表 );</code></li>\n<li>例如:<code>printf(&quot;a = %d, b = %d&quot;,a, b);</code></li>\n<li>非格式字符串原样输出, 格式控制字符串会被输出项列表中的数据替换</li>\n<li>注意: 格式控制字符串和输出项在数量和类型上<em><strong>必须一一对应</strong></em></li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>格式控制字符串<ul>\n<li>形式:  <code>%[标志][输出宽度][.精度][长度]类型</code></li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>类型<ul>\n<li>格式: <code>printf(&quot;a = %类型&quot;, a);</code></li>\n<li>类型字符串用以表示输出数据的类型, 其格式符和意义如下所示</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>d</td>\n<td>有符号10进制整型</td>\n</tr>\n<tr>\n<td>i</td>\n<td>有符号10进制整型</td>\n</tr>\n<tr>\n<td>u</td>\n<td>无符号10进制整型</td>\n</tr>\n<tr>\n<td>o</td>\n<td>无符号8进制整型</td>\n</tr>\n<tr>\n<td>x</td>\n<td>无符号16进制整型</td>\n</tr>\n<tr>\n<td>X</td>\n<td>无符号16进制整型</td>\n</tr>\n<tr>\n<td>f</td>\n<td>单、双精度浮点数(默认保留6位小数)</td>\n</tr>\n<tr>\n<td>e &#x2F; E</td>\n<td>以指数形式输出单、双精度浮点数</td>\n</tr>\n<tr>\n<td>g &#x2F; G</td>\n<td>以最短输出宽度,输出单、双精度浮点数</td>\n</tr>\n<tr>\n<td>c</td>\n<td>字符</td>\n</tr>\n<tr>\n<td>s</td>\n<td>字符串</td>\n</tr>\n<tr>\n<td>p</td>\n<td>地址</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">-10</span>;</span><br><span class=\"line\">    <span class=\"type\">float</span> c = <span class=\"number\">6.6f</span>;</span><br><span class=\"line\">    <span class=\"type\">double</span> d = <span class=\"number\">3.1415926</span>;</span><br><span class=\"line\">    <span class=\"type\">double</span> e = <span class=\"number\">10.10</span>;</span><br><span class=\"line\">    <span class=\"type\">char</span> f = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 有符号整数(可以输出负数)</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = %d\\n&quot;</span>, a); <span class=\"comment\">// 10</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = %i\\n&quot;</span>, a); <span class=\"comment\">// 10</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 无符号整数(不可以输出负数)</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = %u\\n&quot;</span>, a); <span class=\"comment\">// 10</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b = %u\\n&quot;</span>, b); <span class=\"comment\">// 429496786</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 无符号八进制整数(不可以输出负数)</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = %o\\n&quot;</span>, a); <span class=\"comment\">// 12</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b = %o\\n&quot;</span>, b); <span class=\"comment\">// 37777777766</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 无符号十六进制整数(不可以输出负数)</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = %x\\n&quot;</span>, a); <span class=\"comment\">// a</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b = %x\\n&quot;</span>, b); <span class=\"comment\">// fffffff6</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 无符号十六进制整数(不可以输出负数)</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = %X\\n&quot;</span>, a); <span class=\"comment\">// A</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b = %X\\n&quot;</span>, b); <span class=\"comment\">// FFFFFFF6</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 单、双精度浮点数(默认保留6位小数)</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;c = %f\\n&quot;</span>, c); <span class=\"comment\">// 6.600000</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;d = %lf\\n&quot;</span>, d); <span class=\"comment\">// 3.141593</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 以指数形式输出单、双精度浮点数</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;e = %e\\n&quot;</span>, e); <span class=\"comment\">// 1.010000e+001</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;e = %E\\n&quot;</span>, e); <span class=\"comment\">// 1.010000E+001</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 以最短输出宽度,输出单、双精度浮点数</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;e = %g\\n&quot;</span>, e); <span class=\"comment\">// 10.1</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;e = %G\\n&quot;</span>, e); <span class=\"comment\">// 10.1</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 输出字符</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;f = %c\\n&quot;</span>, f); <span class=\"comment\">// a</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<ul>\n<li>宽度<ul>\n<li>格式: <code>printf(&quot;a = %[宽度]类型&quot;, a);</code></li>\n<li>用十进制整数来指定输出的宽度, 如果实际位数多于指定宽度,则按照实际位数输出, 如果实际位数少于指定宽度则以空格补位</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 实际位数小于指定宽度</span></span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a =|%d|\\n&quot;</span>, a); <span class=\"comment\">// |1|</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a =|%5d|\\n&quot;</span>, a); <span class=\"comment\">// |    1|</span></span><br><span class=\"line\">    <span class=\"comment\">// 实际位数大于指定宽度</span></span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">1234567</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b =|%d|\\n&quot;</span>, b); <span class=\"comment\">// |1234567|</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b =|%5d|\\n&quot;</span>, b); <span class=\"comment\">// |1234567|</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<ul>\n<li>标志<ul>\n<li>格式: <code>printf(&quot;a = %[标志][宽度]类型&quot;, a);</code></li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>标志</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-</td>\n<td>左对齐, 默认右对齐</td>\n</tr>\n<tr>\n<td>+</td>\n<td>当输出值为正数时,在输出值前面加上一个+号, 默认不显示</td>\n</tr>\n<tr>\n<td>0</td>\n<td>右对齐时, 用0填充宽度.(默认用空格填充)</td>\n</tr>\n<tr>\n<td>空格</td>\n<td>输出值为正数时,在输出值前面加上空格, 为负数时加上负号</td>\n</tr>\n<tr>\n<td>#</td>\n<td>对c、s、d、u类型无影响</td>\n</tr>\n<tr>\n<td>#</td>\n<td>对o类型, 在输出时加前缀o</td>\n</tr>\n<tr>\n<td>#</td>\n<td>对x类型,在输出时加前缀0x</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// -号标志</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a =|%d|\\n&quot;</span>, a); <span class=\"comment\">// |1|</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a =|%5d|\\n&quot;</span>, a); <span class=\"comment\">// |    1|</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a =|%-5d|\\n&quot;</span>, a);<span class=\"comment\">// |1    |</span></span><br><span class=\"line\">    <span class=\"comment\">// +号标志</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a =|%d|\\n&quot;</span>, a); <span class=\"comment\">// |1|</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a =|%+d|\\n&quot;</span>, a);<span class=\"comment\">// |+1|</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b =|%d|\\n&quot;</span>, b); <span class=\"comment\">// |-1|</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b =|%+d|\\n&quot;</span>, b);<span class=\"comment\">// |-1|</span></span><br><span class=\"line\">    <span class=\"comment\">// 0标志</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a =|%5d|\\n&quot;</span>, a); <span class=\"comment\">// |    1|</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a =|%05d|\\n&quot;</span>, a); <span class=\"comment\">// |00001|</span></span><br><span class=\"line\">    <span class=\"comment\">// 空格标志</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a =|% d|\\n&quot;</span>, a); <span class=\"comment\">// | 1|</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b =|% d|\\n&quot;</span>, b); <span class=\"comment\">// |-1|</span></span><br><span class=\"line\">    <span class=\"comment\">// #号</span></span><br><span class=\"line\">    <span class=\"type\">int</span> c = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;c = %o\\n&quot;</span>, c); <span class=\"comment\">// 12</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;c = %#o\\n&quot;</span>, c); <span class=\"comment\">// 012</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;c = %x\\n&quot;</span>, c); <span class=\"comment\">// a</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;c = %#x\\n&quot;</span>, c); <span class=\"comment\">// 0xa</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<ul>\n<li>精度<ul>\n<li>格式: <code>printf(&quot;a = %[精度]类型&quot;, a); </code></li>\n<li>精度格式符以”.”开头, 后面跟上十进制整数, 用于指定需要输出多少位小数, 如果输出位数大于指定的精度, 则删除超出的部分</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> a = <span class=\"number\">3.1415926</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = %.2f\\n&quot;</span>, a); <span class=\"comment\">// 3.14</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>动态指定保留小数位数<ul>\n<li>格式: <code>printf(&quot;a = %.*f&quot;, a);</code></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> a = <span class=\"number\">3.1415926</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = %.*f&quot;</span>, <span class=\"number\">2</span>, a); <span class=\"comment\">// 3.14</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>实型(浮点类型)有效位数问题<ul>\n<li>对于单精度数,使用%f格式符输出时,仅前6~7位是有效数字</li>\n<li>对于双精度数,使用%lf格式符输出时,前15~16位是有效数字</li>\n<li>有效位数和精度(保留多少位)不同, 有效位数是指从第一个非零数字开始,误差不超过本数位半个单位的、精确可信的数位</li>\n<li>有效位数包含小数点前的非零数位</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//        1234.567871093750000</span></span><br><span class=\"line\">    <span class=\"type\">float</span> a = <span class=\"number\">1234.567890123456789</span>;</span><br><span class=\"line\">    <span class=\"comment\">//         1234.567890123456900</span></span><br><span class=\"line\">    <span class=\"type\">double</span> b = <span class=\"number\">1234.567890123456789</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = %.15f\\n&quot;</span>, a); <span class=\"comment\">// 前8位数字是准确的, 后面的都不准确</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b = %.15f\\n&quot;</span>, b); <span class=\"comment\">// 前16位数字是准确的, 后面的都不准确</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<ul>\n<li>长度<ul>\n<li>格式: <code>printf(&quot;a = %[长度]类型&quot;, a);</code></li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>长度</th>\n<th>修饰类型</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>hh</td>\n<td>d、i、o、u、x</td>\n<td>输出char</td>\n</tr>\n<tr>\n<td>h</td>\n<td>d、i、o、u、x</td>\n<td>输出 short int</td>\n</tr>\n<tr>\n<td>l</td>\n<td>d、i、o、u、x</td>\n<td>输出 long int</td>\n</tr>\n<tr>\n<td>ll</td>\n<td>d、i、o、u、x</td>\n<td>输出 long long int</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> a = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">    <span class=\"type\">short</span> <span class=\"type\">int</span> b = <span class=\"number\">123</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span>  c = <span class=\"number\">123</span>;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">int</span> d = <span class=\"number\">123</span>;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> <span class=\"type\">int</span> e = <span class=\"number\">123</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = %hhd\\n&quot;</span>, a); <span class=\"comment\">// 97</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b = %hd\\n&quot;</span>, b); <span class=\"comment\">// 123</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;c = %d\\n&quot;</span>, c); <span class=\"comment\">// 123</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;d = %ld\\n&quot;</span>, d); <span class=\"comment\">// 123</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;e = %lld\\n&quot;</span>, e); <span class=\"comment\">// 123</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>转义字符<ul>\n<li>格式: <code>printf(&quot;%f%%&quot;, 3.1415);</code></li>\n<li>%号在格式控制字符串中有特殊含义, 所以想输出%必须添加一个转移字符</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%f%%&quot;</span>, <span class=\"number\">3.1415</span>); <span class=\"comment\">// 输出结果3.1415%</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"Scanf函数\"><a href=\"#Scanf函数\" class=\"headerlink\" title=\"Scanf函数\"></a>Scanf函数</h1><ul>\n<li>scanf函数用于接收键盘输入的内容, 是一个阻塞式函数,程序会停在scanf函数出现的地方, 直到接收到数据才会执行后面的代码</li>\n<li>printf函数的调用格式为:</li>\n</ul>\n<ul>\n<li><code>scanf(&quot;格式控制字符串&quot;, 地址列表);</code></li>\n<li>例如: <code>scanf(&quot;%d&quot;, &amp;num);</code></li>\n</ul>\n<hr>\n<ul>\n<li>基本用法</li>\n</ul>\n<ul>\n<li>地址列表项中只能传入变量地址, 变量地址可以通过&amp;符号+变量名称的形式获取</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;number); <span class=\"comment\">// 接收一个整数</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %d\\n&quot;</span>, number); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>接收非字符和字符串类型时, 空格、Tab和回车会被忽略</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">float</span> num;</span><br><span class=\"line\">    <span class=\"comment\">// 例如:输入 Tab 空格 回车 回车 Tab 空格 3.14 , 得到的结果还是3.14</span></span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%f&quot;</span>, &amp;num);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;num = %f\\n&quot;</span>, num);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>非格式字符串原样输入, 格式控制字符串会赋值给地址项列表项中的变量</li>\n</ul>\n<ul>\n<li>不推荐这种写法</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number;</span><br><span class=\"line\">    <span class=\"comment\">// 用户必须输入number = 数字  , 否则会得到一个意外的值</span></span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;number = %d&quot;</span>, &amp;number);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %d\\n&quot;</span>, number);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>接收多条数据</li>\n</ul>\n<ul>\n<li>格式控制字符串和地址列表项在数量和类型上必须一一对应</li>\n<li>非字符和字符串情况下如果没有指定多条数据的分隔符, 可以使用空格或者回车作为分隔符(不推荐这种写法)</li>\n<li>非字符和字符串情况下建议明确指定多条数据之间分隔符</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;number);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %d\\n&quot;</span>, number);</span><br><span class=\"line\">    <span class=\"type\">int</span> value;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;value);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;value = %d\\n&quot;</span>, value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number;</span><br><span class=\"line\">    <span class=\"type\">int</span> value;</span><br><span class=\"line\">    <span class=\"comment\">// 可以输入 数字 空格 数字, 或者 数字 回车 数字</span></span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>, &amp;number, &amp;value);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %d\\n&quot;</span>, number);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;value = %d\\n&quot;</span>, value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number;</span><br><span class=\"line\">    <span class=\"type\">int</span> value;</span><br><span class=\"line\">    <span class=\"comment\">// 输入 数字,数字 即可</span></span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d,%d&quot;</span>, &amp;number, &amp;value);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %d\\n&quot;</span>, number);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;value = %d\\n&quot;</span>, value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>\\n是scanf函数的结束符号, 所以格式化字符串中不能出现\\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number;</span><br><span class=\"line\">    <span class=\"comment\">// 输入完毕之后按下回车无法结束输入</span></span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, &amp;number);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %d\\n&quot;</span>, number);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","feature":false,"text":" 《Code101-C语言基础》目录 先导课 从零到一：你的第一堂C语言入门课 第一课 变量和常量 第二课 printf和scanf 第三课 putchar和g...","permalink":"/post/Code101/002printf和scanf","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"Code101","slug":"Code101","count":5,"path":"api/categories/Code101.json"}],"tags":[{"name":"c/cpp","slug":"c-cpp","count":5,"path":"api/tags/c-cpp.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#printf%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">printf函数</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Scanf%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">Scanf函数</span></a></li></ol>","author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"putchar和getchar","uid":"0a2db89b12c09c517b822613a7e4e3dd","slug":"Code101/003putchar和getchar","date":"2025-07-27T16:00:00.000Z","updated":"2025-07-28T14:13:45.727Z","comments":true,"path":"api/articles/Code101/003putchar和getchar.json","keywords":null,"cover":"/images/article-cover/Code101.png","text":" 《Code101-C语言基础》目录 先导课 从零到一：你的第一堂C语言入门课 第一课 变量和常量 第二课 printf和scanf 第三课 putchar和g...","permalink":"/post/Code101/003putchar和getchar","photos":[],"count_time":{"symbolsCount":395,"symbolsTime":"1 mins."},"categories":[{"name":"Code101","slug":"Code101","count":5,"path":"api/categories/Code101.json"}],"tags":[{"name":"c/cpp","slug":"c-cpp","count":5,"path":"api/tags/c-cpp.json"}],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"C语言运算符","uid":"14f178cef56d02d5620710b2025709d0","slug":"Code101/004C语言运算符","date":"2025-07-27T16:00:00.000Z","updated":"2025-07-28T14:13:54.670Z","comments":true,"path":"api/articles/Code101/004C语言运算符.json","keywords":null,"cover":"/images/article-cover/Code101.png","text":" 《Code101-C语言基础》目录 先导课 从零到一：你的第一堂C语言入门课 第一课 变量和常量 第二课 printf和scanf 第三课 putchar和g...","permalink":"/post/Code101/004C语言运算符","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"Code101","slug":"Code101","count":5,"path":"api/categories/Code101.json"}],"tags":[{"name":"c/cpp","slug":"c-cpp","count":5,"path":"api/tags/c-cpp.json"}],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}