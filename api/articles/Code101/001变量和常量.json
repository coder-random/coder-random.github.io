{"title":"变量和常量","uid":"eaf82bf61a3a17e8e76f1b3dbfe40758","slug":"Code101/001变量和常量","date":"2025-07-27T16:00:00.000Z","updated":"2025-07-28T14:13:41.408Z","comments":true,"path":"api/articles/Code101/001变量和常量.json","keywords":null,"cover":"/images/article-cover/Code101.png","content":"<details class=\"custom-details\">\n<summary>《Code101-C语言基础》目录</summary>\n<ul>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F000%E4%BB%8E%E9%9B%B6%E5%88%B0%E4%B8%80%EF%BC%9A%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A0%82C%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8%E8%AF%BE\">先导课 从零到一：你的第一堂C语言入门课</a></li>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F001%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F\">第一课 变量和常量</a></li>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F002printf%E5%92%8Cscanf\">第二课 printf和scanf</a></li>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F003putchar%E5%92%8Cgetchar\">第三课 putchar和getchar</a></li>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F004C%E8%AF%AD%E8%A8%80%E8%BF%90%E7%AE%97%E7%AC%A6\">第四课 C语言运算符</a></li>\n</ul>\n\n</details>\n<h1 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h1><h2 id=\"什么是常量\"><a href=\"#什么是常量\" class=\"headerlink\" title=\"什么是常量?\"></a>什么是常量?</h2><ul>\n<li>“量”表示数据。常量，则表示一些固定的数据，也就是不能改变的数据</li>\n<li>就好比现实生活中生男生女一样, 生下来是男孩永远都是男孩, 生下来是女孩就永远都是女孩, 所以性别就是现实生活中常量的一种体现</li>\n</ul>\n<hr>\n<h2 id=\"常量的类型\"><a href=\"#常量的类型\" class=\"headerlink\" title=\"常量的类型\"></a>常量的类型</h2><ul>\n<li><p>整型常量</p>\n<ul>\n<li>十进制整数。例如:666,-120, 0</li>\n<li>八进制整数,八进制形式的常量都以0开头。例如:0123,也就是十进制的83;-011,也就是十进 制的-9</li>\n<li>十六进制整数,十六进制的常量都是以0x开头。例如:0x123,也就是十进制的291</li>\n<li>二进制整数,逢二进一 0b开头。例如: 0b0010,也就是十进制的2</li>\n</ul>\n</li>\n<li><p>实型常量</p>\n<ul>\n<li>小数形式</li>\n<li>单精度小数:以字母f或字母F结尾。例如:0.0f、1.01f</li>\n<li>双精度小数:十进制小数形式。例如:3.14、 6.66</li>\n<li>默认就是双精度</li>\n<li>可以没有整数位只有小数位。例如: .3、 .6f</li>\n<li>指数形式</li>\n<li>以幂的形式表示, 以字母e或字母E后跟一个10为底的幂数</li>\n<li>上过初中的都应该知道科学计数法吧,指数形式的常量就是科学计数法的另一种表 示,比如123000,<em><strong>用科学计数法表示为1.23×10的5次方</strong></em></li>\n<li><em><strong>用C语言表示就是1.23e5或1.23E5</strong></em></li>\n<li>字母e或字母E后面的指数必须为整数</li>\n<li>字母e或字母E前后必须要有数字</li>\n<li>字母e或字母E前后不能有空格</li>\n</ul>\n</li>\n<li><p>字符常量</p>\n<ul>\n<li>字符型常量都是用’’(单引号)括起来的。例如:’a’、’b’、’c’</li>\n<li>字符常量的单引号中只能有一个字符</li>\n<li>特殊情况: 如果是转义字符,单引号中可以有两个字符。例如:’\\n’、’\\t’</li>\n</ul>\n</li>\n<li><p>字符串常量</p>\n<ul>\n<li>字符型常量都是用””(双引号)括起来的。例如:”a”、”abc”、”lnj”</li>\n<li>系统会自动在字符串常量的末尾加一个字符’\\0’作为字符串结束标志</li>\n</ul>\n</li>\n<li><p>自定义常量</p>\n<ul>\n<li>后期讲解内容, 此处先不用了解</li>\n</ul>\n</li>\n<li><p>常量类型练习</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>123</td>\n<td>1.1F</td>\n<td>1.1</td>\n<td>.3</td>\n<td>‘a’</td>\n<td>“a”</td>\n<td>“河南”</td>\n</tr>\n</tbody></table>\n<hr>\n<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><h2 id=\"什么是变量\"><a href=\"#什么是变量\" class=\"headerlink\" title=\"什么是变量?\"></a>什么是变量?</h2><ul>\n<li>“量”表示数据。变量，则表示一些不固定的数据，也就是可以改变的数据</li>\n<li>就好比现实生活中人的身高、体重一样, 随着年龄的增长会不断发生改变, 所以身高、体重就是现实生活中变量的一种体现</li>\n<li>就好比现实生活中超市的储物格一样, 同一个格子在不同时期不同人使用,格子中存储的物品是可以变化的。</li>\n</ul>\n<hr>\n<h2 id=\"如何定义变量\"><a href=\"#如何定义变量\" class=\"headerlink\" title=\"如何定义变量\"></a>如何定义变量</h2><ul>\n<li>格式1: 变量类型 变量名称 ;<ul>\n<li>为什么要定义变量?</li>\n<li>任何变量在使用之前，必须先进行定义, 只有定义了变量才会分配存储空间, 才有空间存储数据</li>\n<li>为什么要限定类型?</li>\n<li>用来约束变量所存放数据的类型。一旦给变量指明了类型，那么这个变量就只能存储这种类型的数据</li>\n<li>内存空间极其有限,不同类型的变量占用不同大小的存储空间</li>\n<li>为什么要指定变量名称?</li>\n<li>存储数据的空间对于我们没有任何意义, 我们需要的是空间中存储的值</li>\n<li>只有有了名称, 我们才能获取到空间中的值</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a;</span><br><span class=\"line\"><span class=\"type\">float</span> b;</span><br><span class=\"line\"><span class=\"type\">char</span> ch;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>格式2:变量类型 变量名称,变量名称;<ul>\n<li>连续定义, 多个变量之间用逗号(,)号隔开</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a,b,c;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>变量名的命名的规范<ul>\n<li>变量名属于标识符,所以必须严格遵守标识符的命名原则</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"如何使用变量？\"><a href=\"#如何使用变量？\" class=\"headerlink\" title=\"如何使用变量？\"></a>如何使用变量？</h2><ul>\n<li>可以利用&#x3D;号往变量里面存储数据<ul>\n<li>在C语言中,利用&#x3D;号往变量里面存储数据, 我们称之为给变量赋值</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> value;</span><br><span class=\"line\">value = <span class=\"number\">998</span>; <span class=\"comment\">// 赋值</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意:<ul>\n<li>这里的&#x3D;号，并不是数学中的“相等”，而是C语言中的<em><strong>赋值运算符</strong></em>，作用是将右边的整型常量998赋值给左边的整型变量value</li>\n<li>赋值的时候,&#x3D; 号的左侧必须是变量 (10&#x3D;b,错误)</li>\n<li>为了方便阅读代码, 习惯在 &#x3D; 的两侧 各加上一个 空格</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"变量的初始化\"><a href=\"#变量的初始化\" class=\"headerlink\" title=\"变量的初始化\"></a>变量的初始化</h2><ul>\n<li>C语言中, 变量的第一次赋值，我们称为“初始化”</li>\n<li>初始化的两种形式<ul>\n<li>先定义,后初始化</li>\n<li><code>int value;  value = 998; // 初始化</code></li>\n<li>定义时同时初始化</li>\n<li><code>int a = 10;  int b = 4, c = 2;</code></li>\n<li>其它表现形式(不推荐)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a, b = <span class=\"number\">10</span>; <span class=\"comment\">//部分初始化</span></span><br><span class=\"line\"><span class=\"type\">int</span> c, d, e;</span><br><span class=\"line\">c = d = e =<span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>不初始化里面存储什么?<ul>\n<li>随机数</li>\n<li>上次程序分配的存储空间,存数一些 内容,“垃圾”</li>\n<li>系统正在用的一些数据</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"如何修改变量值\"><a href=\"#如何修改变量值\" class=\"headerlink\" title=\"如何修改变量值?\"></a>如何修改变量值?</h2><ul>\n<li>多次赋值即可<ul>\n<li>每次赋值都会覆盖原来的值</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> i = <span class=\"number\">10</span>;</span><br><span class=\"line\">i = <span class=\"number\">20</span>; <span class=\"comment\">// 修改变量的值</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"变量之间的值传递\"><a href=\"#变量之间的值传递\" class=\"headerlink\" title=\"变量之间的值传递\"></a>变量之间的值传递</h2><ul>\n<li>可以将一个变量存储的值赋值给另一个变量</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> b = a; <span class=\"comment\">// 相当于把a中存储的10拷贝了一份给b</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"如何查看变量的值\"><a href=\"#如何查看变量的值\" class=\"headerlink\" title=\"如何查看变量的值?\"></a>如何查看变量的值?</h2><ul>\n<li>使用printf输出一个或多个变量的值</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">10</span>, c = <span class=\"number\">11</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a=%d, c=%d&quot;</span>, a, c);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>输出其它类型变量的值</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">double</span> height = <span class=\"number\">1.75</span>;</span><br><span class=\"line\"><span class=\"type\">char</span> blood = <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;height=%.2f, 血型是%c&quot;</span>, height,  blood);</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"变量的作用域\"><a href=\"#变量的作用域\" class=\"headerlink\" title=\"变量的作用域\"></a>变量的作用域</h2><ul>\n<li>C语言中所有变量都有自己的作用域</li>\n<li>变量定义的位置不同,其作用域也不同</li>\n<li>按照作用域的范围可分为两种, 即局部变量和全局变量</li>\n</ul>\n<hr>\n<ul>\n<li>局部变量<ul>\n<li>局部变量也称为内部变量</li>\n<li>局部变量是在<em><strong>代码块内</strong></em>定义的, 其作用域仅限于代码块内, 离开该代码块后无法使用</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i = <span class=\"number\">998</span>; <span class=\"comment\">// 作用域开始</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">// 作用域结束</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> i = <span class=\"number\">998</span>; <span class=\"comment\">// 作用域开始</span></span><br><span class=\"line\">    &#125;<span class=\"comment\">// 作用域结束</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;i = %d\\n&quot;</span>, i); <span class=\"comment\">// 不能使用</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> i = <span class=\"number\">998</span>;<span class=\"comment\">// 作用域开始</span></span><br><span class=\"line\">        &#125;<span class=\"comment\">// 作用域结束</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;i = %d\\n&quot;</span>, i); <span class=\"comment\">// 不能使用</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<ul>\n<li>全局变量<ul>\n<li>全局变量也称为外部变量,它是在代码块外部定义的变量</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> i = <span class=\"number\">666</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;i = %d\\n&quot;</span>, i); <span class=\"comment\">// 可以使用</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">// 作用域结束</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">call</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;i = %d\\n&quot;</span>, i); <span class=\"comment\">// 可以使用</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<ul>\n<li>注意点:<ul>\n<li>同一作用域范围内不能有相同名称的变量</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i = <span class=\"number\">998</span>; <span class=\"comment\">// 作用域开始</span></span><br><span class=\"line\">    <span class=\"type\">int</span> i = <span class=\"number\">666</span>; <span class=\"comment\">// 报错, 重复定义</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">// 作用域结束</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> i = <span class=\"number\">666</span>; </span><br><span class=\"line\"><span class=\"type\">int</span> i = <span class=\"number\">998</span>; <span class=\"comment\">// 报错, 重复定义</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>不同作用域范围内可以有相同名称的变量</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> i = <span class=\"number\">666</span>; </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i = <span class=\"number\">998</span>; <span class=\"comment\">// 不会报错</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i = <span class=\"number\">998</span>; <span class=\"comment\">// 不会报错</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">call</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i = <span class=\"number\">666</span>;  <span class=\"comment\">// 不会报错</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","feature":true,"text":" 《Code101-C语言基础》目录 先导课 从零到一：你的第一堂C语言入门课 第一课 变量和常量 第二课 printf和scanf 第三课 putchar和g...","permalink":"/post/Code101/001变量和常量","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"Code101","slug":"Code101","count":5,"path":"api/categories/Code101.json"}],"tags":[{"name":"c/cpp","slug":"c-cpp","count":5,"path":"api/tags/c-cpp.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">常量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">什么是常量?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">常量的类型</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">什么是变量?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">如何定义变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F%EF%BC%9F\"><span class=\"toc-text\">如何使用变量？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">变量的初始化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%8F%98%E9%87%8F%E5%80%BC\"><span class=\"toc-text\">如何修改变量值?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E4%B9%8B%E9%97%B4%E7%9A%84%E5%80%BC%E4%BC%A0%E9%80%92\"><span class=\"toc-text\">变量之间的值传递</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E5%8F%98%E9%87%8F%E7%9A%84%E5%80%BC\"><span class=\"toc-text\">如何查看变量的值?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">变量的作用域</span></a></li></ol></li></ol>","author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"2025暑假分享","uid":"5218050a0cad171f58cef1b0ffd5e306","slug":"2025暑假分享","date":"2025-08-31T10:00:00.000Z","updated":"2025-07-28T11:42:12.882Z","comments":true,"path":"api/articles/2025暑假分享.json","keywords":null,"cover":null,"text":"本文记录了 2025 年暑期的刷题过程与思维总结，内容涵盖： - 各类刷题平台精选题目 - 常见算法专题 - 基础与进阶数据结构 - 常用算法技巧及解题思路归纳 每道题均附有思路说明与代码实现，并结合个人理解进行讲解，突出核心思想与易错点。 本笔记适合初学者夯实基础，也便于进阶者查漏补缺、构建知识体系。 > 本文强调“理解 + 应用”，通过实战刷题逐步提升算法能力，欢迎交流与指正。 ","permalink":"/post/2025暑假分享","photos":[],"count_time":{"symbolsCount":796,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"putchar和getchar","uid":"0a2db89b12c09c517b822613a7e4e3dd","slug":"Code101/003putchar和getchar","date":"2025-07-27T16:00:00.000Z","updated":"2025-07-28T14:13:45.727Z","comments":true,"path":"api/articles/Code101/003putchar和getchar.json","keywords":null,"cover":"/images/article-cover/Code101.png","text":" 《Code101-C语言基础》目录 先导课 从零到一：你的第一堂C语言入门课 第一课 变量和常量 第二课 printf和scanf 第三课 putchar和g...","permalink":"/post/Code101/003putchar和getchar","photos":[],"count_time":{"symbolsCount":395,"symbolsTime":"1 mins."},"categories":[{"name":"Code101","slug":"Code101","count":5,"path":"api/categories/Code101.json"}],"tags":[{"name":"c/cpp","slug":"c-cpp","count":5,"path":"api/tags/c-cpp.json"}],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}