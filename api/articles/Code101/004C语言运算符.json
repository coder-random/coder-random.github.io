{"title":"C语言运算符","uid":"14f178cef56d02d5620710b2025709d0","slug":"Code101/004C语言运算符","date":"2025-07-27T16:00:00.000Z","updated":"2025-07-28T14:13:54.670Z","comments":true,"path":"api/articles/Code101/004C语言运算符.json","keywords":null,"cover":"/images/article-cover/Code101.png","content":"<details class=\"custom-details\">\n<summary>《Code101-C语言基础》目录</summary>\n<ul>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F000%E4%BB%8E%E9%9B%B6%E5%88%B0%E4%B8%80%EF%BC%9A%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A0%82C%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8%E8%AF%BE\">先导课 从零到一：你的第一堂C语言入门课</a></li>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F001%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F\">第一课 变量和常量</a></li>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F002printf%E5%92%8Cscanf\">第二课 printf和scanf</a></li>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F003putchar%E5%92%8Cgetchar\">第三课 putchar和getchar</a></li>\n<li><a href=\"https://coder-random.pages.dev/post/Code101%2F004C%E8%AF%AD%E8%A8%80%E8%BF%90%E7%AE%97%E7%AC%A6\">第四课 C语言运算符</a></li>\n</ul>\n\n</details>\n<h2 id=\"运算符基本概念\"><a href=\"#运算符基本概念\" class=\"headerlink\" title=\"运算符基本概念\"></a>运算符基本概念</h2><ul>\n<li><p>和数学中的运算符一样, C语言中的运算符是告诉程序执行特定算术或逻辑操作的符号</p>\n<ul>\n<li>例如告诉程序, 某两个数相加, 相减,相乘等</li>\n</ul>\n</li>\n<li><p>什么是表达式</p>\n<ul>\n<li>表达式就是利用运算符链接在一起的有意义,有结果的语句;</li>\n<li>例如: a + b; 就是一个算数表达式, 它的意义是将两个数相加, 两个数相加的结果就是表达式的结果</li>\n<li>注意: 表达式一定要有结果</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"运算符分类\"><a href=\"#运算符分类\" class=\"headerlink\" title=\"运算符分类\"></a>运算符分类</h2><ul>\n<li>按照功能划分:<ul>\n<li>算术运算符</li>\n<li>赋值运算符</li>\n<li>关系运算符</li>\n<li>逻辑运算符</li>\n<li>位运算符</li>\n</ul>\n</li>\n<li>按照参与运算的操作数个数划分:<ul>\n<li>单目运算<ul>\n<li>只有一个操作数 如 : i++;</li>\n</ul>\n</li>\n<li>双目运算<ul>\n<li>有两个操作数 如 : a + b;</li>\n</ul>\n</li>\n<li>三目运算<ul>\n<li>C语言中唯一的一个,也称为问号表达式 如:  a&gt;b ? 1 : 0;</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"运算符的优先级和结合性\"><a href=\"#运算符的优先级和结合性\" class=\"headerlink\" title=\"运算符的优先级和结合性\"></a>运算符的优先级和结合性</h2><ul>\n<li>早在小学的数学课本中,我们就学习过”从左往右,先乘除后加减,有括号的先算括号里面的”, 这句话就蕴含了优先级和结合性的问题</li>\n<li>C语言中,运算符的运算优先级共分为15 级。1 级最高,15 级最低</li>\n</ul>\n<ul>\n<li><p>在C语言表达式中,不同优先级的运算符, 运算次序按照由高到低执行</p>\n</li>\n<li><p>在C语言表达式中,相同优先级的运算符, 运算次序按照结合性规定的方向执行</p>\n</li>\n<li><table>\n<thead>\n<tr>\n<th>优先级</th>\n<th>运算符</th>\n<th>说明</th>\n<th>结合性</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>() [] -&gt; .</td>\n<td>括号、下标、结构体成员访问</td>\n<td>从左到右</td>\n</tr>\n<tr>\n<td>2</td>\n<td>++ – ~ ! - + * &amp; sizeof (类型)</td>\n<td>单目运算符、类型转换</td>\n<td>从右到左</td>\n</tr>\n<tr>\n<td>3</td>\n<td>* &#x2F; %</td>\n<td>乘法、除法、取余</td>\n<td>从左到右</td>\n</tr>\n<tr>\n<td>4</td>\n<td>+ -</td>\n<td>加法、减法</td>\n<td>从左到右</td>\n</tr>\n<tr>\n<td>5</td>\n<td>&lt;&lt; &gt;&gt;</td>\n<td>位移</td>\n<td>从左到右</td>\n</tr>\n<tr>\n<td>6</td>\n<td>&lt; &lt;&#x3D; &gt; &gt;&#x3D;</td>\n<td>大小比较</td>\n<td>从左到右</td>\n</tr>\n<tr>\n<td>7</td>\n<td>&#x3D;&#x3D; !&#x3D;</td>\n<td>等于、不等于</td>\n<td>从左到右</td>\n</tr>\n<tr>\n<td>8</td>\n<td>&amp;</td>\n<td>位与</td>\n<td>从左到右</td>\n</tr>\n<tr>\n<td>9</td>\n<td>^</td>\n<td>位异或</td>\n<td>从左到右</td>\n</tr>\n<tr>\n<td>10</td>\n<td>|</td>\n<td>位或</td>\n<td>从左到右</td>\n</tr>\n<tr>\n<td>11</td>\n<td>&amp;&amp;</td>\n<td>逻辑与</td>\n<td>从左到右</td>\n</tr>\n<tr>\n<td>12</td>\n<td>||</td>\n<td>逻辑或</td>\n<td>从左到右</td>\n</tr>\n<tr>\n<td>13</td>\n<td>?:</td>\n<td>条件运算符（三目）</td>\n<td>从右到左</td>\n</tr>\n<tr>\n<td>14</td>\n<td>&#x3D; +&#x3D; -&#x3D; *&#x3D; &#x2F;&#x3D; %&#x3D; &lt;&lt;&#x3D; &gt;&gt;&#x3D; &amp;&#x3D; ^&#x3D;</td>\n<td>&#x3D;</td>\n<td>赋值及复合赋值运算符</td>\n</tr>\n<tr>\n<td>15</td>\n<td>，</td>\n<td>逗号运算符</td>\n<td>从左到右</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<hr>\n<h2 id=\"算数运算符\"><a href=\"#算数运算符\" class=\"headerlink\" title=\"算数运算符\"></a>算数运算符</h2><table>\n<thead>\n<tr>\n<th>优先级</th>\n<th>名称</th>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>3</td>\n<td>乘法运算符</td>\n<td>*</td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n<tr>\n<td>3</td>\n<td>除法运算符</td>\n<td>&#x2F;</td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n<tr>\n<td>3</td>\n<td>求余运算符 (模运算符)</td>\n<td>%</td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n<tr>\n<td>4</td>\n<td>加法运算符</td>\n<td>+</td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n<tr>\n<td>4</td>\n<td>减法运算符</td>\n<td>-</td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n</tbody></table>\n<ul>\n<li>注意事项<ul>\n<li>如果参与运算的两个操作数皆为整数, 那么结果也为整数</li>\n<li>如果参与运算的两个操作数其中一个是浮点数, 那么结果一定是浮点数</li>\n<li>求余运算符, 本质上就是数学的商和余”中的余数</li>\n<li>求余运算符, 参与运算的两个操作数必须都是整数, 不能包含浮点数</li>\n<li>求余运算符, 被除数小于除数, 那么结果就是被除数</li>\n<li>求余运算符, 运算结果的正负性取决于被除数,跟除数无关, 被除数是正数结果就是正数,被除数是负数结果就是负数</li>\n<li>求余运算符, 被除数为0, 结果为0</li>\n<li>求余运算符, 除数为0, 没有意义(不要这样写)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 加法</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = a + b;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%i\\n&quot;</span>, result); <span class=\"comment\">// 15</span></span><br><span class=\"line\">    <span class=\"comment\">// 减法</span></span><br><span class=\"line\">    result = a - b;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%i\\n&quot;</span>, result); <span class=\"comment\">// 5</span></span><br><span class=\"line\">    <span class=\"comment\">// 乘法</span></span><br><span class=\"line\">    result = a * b;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%i\\n&quot;</span>, result); <span class=\"comment\">// 50</span></span><br><span class=\"line\">    <span class=\"comment\">// 除法</span></span><br><span class=\"line\">    result = a / b;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%i\\n&quot;</span>, result); <span class=\"comment\">// 2</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 算术运算符的结合性和优先级</span></span><br><span class=\"line\">    <span class=\"comment\">// 结合性: 左结合性, 从左至右</span></span><br><span class=\"line\">    <span class=\"type\">int</span> c = <span class=\"number\">50</span>;</span><br><span class=\"line\">    result = a + b + c; <span class=\"comment\">// 15 + c;  65;</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%i\\n&quot;</span>, result);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 优先级: * / % 大于 + -</span></span><br><span class=\"line\">    result = a + b * c; <span class=\"comment\">// a + 250; 260;</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%i\\n&quot;</span>, result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 整数除以整数, 结果还是整数</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%i\\n&quot;</span>, <span class=\"number\">10</span> / <span class=\"number\">3</span>); <span class=\"comment\">// 3</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 参与运算的任何一个数是小数, 结果就是小数</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%f\\n&quot;</span>, <span class=\"number\">10</span> / <span class=\"number\">3.0</span>); <span class=\"comment\">// 3.333333</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 10 / 3 商等于3, 余1</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = <span class=\"number\">10</span> % <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 左边小于右边, 那么结果就是左边</span></span><br><span class=\"line\">    result = <span class=\"number\">2</span> % <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%i\\n&quot;</span>, result); <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 被除数是正数结果就是正数,被除数是负数结果就是负数</span></span><br><span class=\"line\">    result = <span class=\"number\">10</span> % <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">    result = <span class=\"number\">-10</span> % <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%i\\n&quot;</span>, result); <span class=\"comment\">// -1</span></span><br><span class=\"line\">    result = <span class=\"number\">10</span> % <span class=\"number\">-3</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h2><table>\n<thead>\n<tr>\n<th>优先级</th>\n<th>名称</th>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>14</td>\n<td>赋值运算符</td>\n<td>&#x3D;</td>\n<td>双目运算符,具有右结合性</td>\n</tr>\n<tr>\n<td>14</td>\n<td>除后赋值运算符</td>\n<td>&#x2F;&#x3D;</td>\n<td>双目运算符,具有右结合性</td>\n</tr>\n<tr>\n<td>14</td>\n<td>乘后赋值运算符 (模运算符)</td>\n<td>*&#x3D;</td>\n<td>双目运算符,具有右结合性</td>\n</tr>\n<tr>\n<td>14</td>\n<td>取模后赋值运算符</td>\n<td>%&#x3D;</td>\n<td>双目运算符,具有右结合性</td>\n</tr>\n<tr>\n<td>14</td>\n<td>加后赋值运算符</td>\n<td>+&#x3D;</td>\n<td>双目运算符,具有右结合性</td>\n</tr>\n<tr>\n<td>14</td>\n<td>减后赋值运算符</td>\n<td>-&#x3D;</td>\n<td>双目运算符,具有右结合性</td>\n</tr>\n</tbody></table>\n<ul>\n<li>简单赋值运算符</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 简单的赋值运算符 =</span></span><br><span class=\"line\">    <span class=\"comment\">// 会将=右边的值赋值给左边</span></span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = %i\\n&quot;</span>, a); <span class=\"comment\">// 10</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>复合赋值运算符</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">     <span class=\"comment\">// 复合赋值运算符 += -= *= /= %=</span></span><br><span class=\"line\">     <span class=\"comment\">// 将变量中的值取出之后进行对应的操作, 操作完毕之后再重新赋值给变量</span></span><br><span class=\"line\">     <span class=\"type\">int</span> num1 = <span class=\"number\">10</span>;</span><br><span class=\"line\">     <span class=\"comment\">// num1 = num1 + 1; num1 = 10 + 1; num1 = 11;</span></span><br><span class=\"line\">     num1 += <span class=\"number\">1</span>;</span><br><span class=\"line\">     <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;num1 = %i\\n&quot;</span>, num1); <span class=\"comment\">// 11</span></span><br><span class=\"line\">     <span class=\"type\">int</span> num2 = <span class=\"number\">10</span>;</span><br><span class=\"line\">     <span class=\"comment\">// num2 = num2 - 1; num2 = 10 - 1; num2 = 9;</span></span><br><span class=\"line\">     num2 -= <span class=\"number\">1</span>;</span><br><span class=\"line\">     <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;num2 = %i\\n&quot;</span>, num2); <span class=\"comment\">// 9</span></span><br><span class=\"line\">     <span class=\"type\">int</span> num3 = <span class=\"number\">10</span>;</span><br><span class=\"line\">     <span class=\"comment\">// num3 = num3 * 2; num3 = 10 * 2; num3 = 20;</span></span><br><span class=\"line\">     num3 *= <span class=\"number\">2</span>;</span><br><span class=\"line\">     <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;num3 = %i\\n&quot;</span>, num3); <span class=\"comment\">// 20</span></span><br><span class=\"line\">     <span class=\"type\">int</span> num4 = <span class=\"number\">10</span>;</span><br><span class=\"line\">     <span class=\"comment\">// num4 = num4 / 2; num4 = 10 / 2; num4 = 5;</span></span><br><span class=\"line\">     num4 /= <span class=\"number\">2</span>;</span><br><span class=\"line\">     <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;num4 = %i\\n&quot;</span>, num4); <span class=\"comment\">// 5</span></span><br><span class=\"line\">     <span class=\"type\">int</span> num5 = <span class=\"number\">10</span>;</span><br><span class=\"line\">     <span class=\"comment\">// num5 = num5 % 3; num5 = 10 % 3; num5 = 1;</span></span><br><span class=\"line\">     num5 %= <span class=\"number\">3</span>;</span><br><span class=\"line\">     <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;num5 = %i\\n&quot;</span>, num5); <span class=\"comment\">// 1</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>结合性和优先级</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 赋值运算符优先级是14, 普通运算符优先级是3和4, 所以先计算普通运算符</span></span><br><span class=\"line\">    <span class=\"comment\">// 普通运算符中乘法优先级是3, 加法是4, 所以先计算乘法</span></span><br><span class=\"line\">    <span class=\"comment\">// number += 1 + 25; number += 26; number = number + 26; number = 36;</span></span><br><span class=\"line\">    number += <span class=\"number\">1</span> + <span class=\"number\">5</span> * <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %i\\n&quot;</span>, number); <span class=\"comment\">// 36</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"自增自减运算符\"><a href=\"#自增自减运算符\" class=\"headerlink\" title=\"自增自减运算符\"></a>自增自减运算符</h2><ul>\n<li>在程序设计中,经常遇到“i&#x3D;i+1”和“i&#x3D;i-1”这两种极为常用的操作。</li>\n<li>C语言为这种操作提供了两个更为简洁的运算符,即++和–</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>优先级</th>\n<th>名称</th>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2</td>\n<td>自增运算符(在后)</td>\n<td>i++</td>\n<td>单目运算符,具有左结合性</td>\n</tr>\n<tr>\n<td>2</td>\n<td>自增运算符(在前)</td>\n<td>++i</td>\n<td>单目运算符,具有右结合性</td>\n</tr>\n<tr>\n<td>2</td>\n<td>自减运算符(在后)</td>\n<td>i–</td>\n<td>单目运算符,具有左结合性</td>\n</tr>\n<tr>\n<td>2</td>\n<td>自减运算符(在前)</td>\n<td>–i</td>\n<td>单目运算符,具有右结合性</td>\n</tr>\n</tbody></table>\n<hr>\n<ul>\n<li>自增<ul>\n<li>如果只有<em><strong>单个</strong></em>变量, 无论++写在前面还是后面都会对变量做+1操作</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number = <span class=\"number\">10</span>;</span><br><span class=\"line\">    number++;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %i\\n&quot;</span>, number); <span class=\"comment\">// 11</span></span><br><span class=\"line\">    ++number;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %i\\n&quot;</span>, number); <span class=\"comment\">// 12</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>如果出现在一个表达式中, 那么++写在前面和后面就会有所区别<ul>\n<li>前缀表达式:++x, –x;其中x表示变量名,先完成变量的自增自减1运算,再用x的值作为表达式的值;即“先变后用”,也就是变量的值先变,再用变量的值参与运算</li>\n<li>后缀表达式:x++, x–;先用x的当前值作为表达式的值,再进行自增自减1运算。即“先用后变”,也就是先用变量的值参与运算,变量的值再进行自增自减变化</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"comment\">// ++在后, 先参与表达式运算, 再自增</span></span><br><span class=\"line\">    <span class=\"comment\">// 表达式运算时为: 3 + 10;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = <span class=\"number\">3</span> + number++;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 13</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %i\\n&quot;</span>, number); <span class=\"comment\">// 11</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"comment\">// ++在前, 先自增, 再参与表达式运算</span></span><br><span class=\"line\">    <span class=\"comment\">// 表达式运算时为: 3 + 11;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = <span class=\"number\">3</span> + ++number;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 14</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %i\\n&quot;</span>, number); <span class=\"comment\">// 11</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>自减</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"comment\">// --在后, 先参与表达式运算, 再自减</span></span><br><span class=\"line\">    <span class=\"comment\">// 表达式运算时为: 10 + 3;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = number-- + <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 13</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %i\\n&quot;</span>, number); <span class=\"comment\">// 9</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"comment\">// --在前, 先自减, 再参与表达式运算</span></span><br><span class=\"line\">    <span class=\"comment\">// 表达式运算时为: 9 + 3;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = --number + <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 12</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;number = %i\\n&quot;</span>, number); <span class=\"comment\">// 9</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意点:<ul>\n<li>自增、自减运算只能用于单个变量,只要是标准类型的变量,不管是整型、实型,还是字符型变量等,但不能用于表达式或常量<ul>\n<li>错误用法: <code>++(a+b); 5++;</code></li>\n</ul>\n</li>\n<li>企业开发中尽量让++ – 单独出现, 尽量不要和其它运算符混合在一起</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> i = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> b = i++; <span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">或者</span><br><span class=\"line\"><span class=\"type\">int</span> b = ++i; <span class=\"comment\">// 不推荐</span></span><br><span class=\"line\">或者</span><br><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> b = ++a + a++;  <span class=\"comment\">// 不推荐</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>请用如下代码替代</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> i = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> b = i; <span class=\"comment\">// 推荐</span></span><br><span class=\"line\">i++;</span><br><span class=\"line\">或者;</span><br><span class=\"line\">i++;</span><br><span class=\"line\"><span class=\"type\">int</span> b = i; <span class=\"comment\">// 推荐</span></span><br><span class=\"line\">或者</span><br><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">++a;</span><br><span class=\"line\"><span class=\"type\">int</span> b = a + a; <span class=\"comment\">// 推荐</span></span><br><span class=\"line\">a++;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>C语言标准没有明确的规定，<code>同一个表达式中同一个变量自增或自减后如何运算</code>, 不同编译器得到结果也不同, 在企业开发中千万不要这样写</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"type\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"> <span class=\"comment\">// 下列代码利用Qt运行时6, 利用Xcode运行是5</span></span><br><span class=\"line\"> <span class=\"comment\">// 但是无论如何, 最终a的值都是3</span></span><br><span class=\"line\"><span class=\"comment\">//  在C语言中这种代码没有意义, 不用深究也不要这样写</span></span><br><span class=\"line\"><span class=\"comment\">// 特点: 参与运算的是同一个变量, 参与运算时都做了自增自减操作, 并且在同一个表达式中</span></span><br><span class=\"line\"> <span class=\"type\">int</span> b = ++a + ++a;</span><br><span class=\"line\"> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b = %i\\n&quot;</span>, b); </span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"sizeof运算符\"><a href=\"#sizeof运算符\" class=\"headerlink\" title=\"sizeof运算符\"></a>sizeof运算符</h2><ul>\n<li>sizeof可以用来计算一个变量或常量、数据类型所占的内存字节数<ul>\n<li>标准格式: sizeof(常量 or 变量);</li>\n</ul>\n</li>\n<li>sizeof的几种形式<ul>\n<li>sizeof( 变量\\常量 );<ul>\n<li><code>sizeof(10);</code></li>\n<li><code>char c = &#39;a&#39;; sizeof(c);</code></li>\n</ul>\n</li>\n<li>sizeof 变量\\常量;<ul>\n<li><code>sizeof 10;</code></li>\n<li><code>char c = &#39;a&#39;; sizeof c;</code></li>\n</ul>\n</li>\n<li>sizeof( 数据类型);<ul>\n<li><code>sizeof(float);</code></li>\n<li><code>如果是数据类型不能省略括号</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">double</span> b = <span class=\"number\">3.14</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 由于sizeof的优先级比+号高, 所以会先计算sizeof(a);</span></span><br><span class=\"line\">    <span class=\"comment\">// a是int类型, 所以占4个字节得到结果4</span></span><br><span class=\"line\">    <span class=\"comment\">// 然后再利用计算结果和b相加, 4 + 3.14 = 7.14</span></span><br><span class=\"line\">    <span class=\"type\">double</span> res = <span class=\"keyword\">sizeof</span> a+b;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;res = %lf\\n&quot;</span>, res); <span class=\"comment\">// 7.14</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"逗号运算符\"><a href=\"#逗号运算符\" class=\"headerlink\" title=\"逗号运算符\"></a>逗号运算符</h2><ul>\n<li>在C语言中逗号“,”也是一种运算符,称为逗号运算符。 其功能是把多个表达式连接起来组成一个表达式,称为逗号表达式</li>\n<li>逗号运算符会从左至右依次取出每个表达式的值, 最后整个逗号表达式的值等于最后一个表达式的值</li>\n<li>格式: <code>表达式1，表达式2，… …，表达式n;</code></li>\n</ul>\n<ul>\n<li>例如: <code>int result = a+1,b=3*4;</code></li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>, b = <span class=\"number\">20</span>, c;</span><br><span class=\"line\">    <span class=\"comment\">// ()优先级高于逗号运算符和赋值运算符, 所以先计算()中的内容</span></span><br><span class=\"line\">    <span class=\"comment\">// c = (11, 21);</span></span><br><span class=\"line\">    <span class=\"comment\">// ()中是一个逗号表达式, 结果是最后一个表达式的值, 所以计算结果为21</span></span><br><span class=\"line\">    <span class=\"comment\">// 将逗号表达式的结果赋值给c, 所以c的结果是21</span></span><br><span class=\"line\">    c = (a + <span class=\"number\">1</span>, b + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;c = %i\\n&quot;</span>, c); <span class=\"comment\">// 21</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"关系运算符\"><a href=\"#关系运算符\" class=\"headerlink\" title=\"关系运算符\"></a>关系运算符</h2><ul>\n<li>为什么要学习关系运算符</li>\n</ul>\n<ul>\n<li>默认情况下，我们在程序中写的每一句正确代码都会被执行。但很多时候，我们想在某个条件成立的情况下才执行某一段代码</li>\n<li>这种情况的话可以使用条件语句来完成，但是学习条件语句之前，我们先来看一些更基础的知识：如何判断一个条件是否成立</li>\n</ul>\n<hr>\n<ul>\n<li>C语言中的真假性</li>\n</ul>\n<ul>\n<li>在C语言中，条件成立称为“真”，条件不成立称为“假”，因此，判断条件是否成立，就是判断条件的“真假”</li>\n<li>怎么判断真假呢？C语言规定，任何数值都有真假性，任何非0值都为“真”，只有0才为“假”。也就是说，108、-18、4.5、-10.5等都是“真”，0则是“假”</li>\n</ul>\n<hr>\n<ul>\n<li>关系运算符的运算结果只有2种：如果条件成立，结果就为1，也就是“真”；如果条件不成立，结果就为0，也就是“假”</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>优先级</th>\n<th>名称</th>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>6</td>\n<td>大于运算符</td>\n<td>&gt;</td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n<tr>\n<td>6</td>\n<td>小于运算符</td>\n<td>&lt;</td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n<tr>\n<td>6</td>\n<td>大于等于运算符</td>\n<td>&gt;&#x3D;</td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n<tr>\n<td>6</td>\n<td>小于等于运算符</td>\n<td>&lt;&#x3D;</td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n<tr>\n<td>7</td>\n<td>等于运算符</td>\n<td>&#x3D;&#x3D;</td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n<tr>\n<td>7</td>\n<td>不等于运算符</td>\n<td>!&#x3D;</td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> result = <span class=\"number\">10</span> &gt; <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">    result = <span class=\"number\">5</span> &lt; <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">    result = <span class=\"number\">5</span> &gt; <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 0</span></span><br><span class=\"line\">    result = <span class=\"number\">10</span> &gt;= <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">    result = <span class=\"number\">10</span> &lt;= <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">    result = <span class=\"number\">10</span> == <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">    result = <span class=\"number\">10</span> != <span class=\"number\">9</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>优先级和结合性</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// == 优先级 小于 &gt;, 所以先计算&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">// result = 10 == 1; result = 0;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = <span class=\"number\">10</span> == <span class=\"number\">5</span> &gt; <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// == 和 != 优先级一样, 所以按照结合性</span></span><br><span class=\"line\">    <span class=\"comment\">// 关系运算符是左结合性, 所以从左至右计算</span></span><br><span class=\"line\">    <span class=\"comment\">// result = 0 != 3; result = 1;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = <span class=\"number\">10</span> == <span class=\"number\">5</span> != <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>练习: 计算result的结果</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> result1 = <span class=\"number\">3</span> &gt; <span class=\"number\">4</span> + <span class=\"number\">7</span></span><br><span class=\"line\"><span class=\"type\">int</span> result2 = (<span class=\"number\">3</span>&gt;<span class=\"number\">4</span>) + <span class=\"number\">7</span></span><br><span class=\"line\"><span class=\"type\">int</span> result3 = <span class=\"number\">5</span> != <span class=\"number\">4</span> + <span class=\"number\">2</span> * <span class=\"number\">7</span> &gt; <span class=\"number\">3</span> == <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意点:<ul>\n<li>无论是float还是double都有精度问题, 所以一定要避免利用&#x3D;&#x3D;判断浮点数是否相等</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">float</span> a = <span class=\"number\">0.1</span>;</span><br><span class=\"line\">    <span class=\"type\">float</span> b = a * <span class=\"number\">10</span> + <span class=\"number\">0.00000000001</span>;</span><br><span class=\"line\">    <span class=\"type\">double</span> c = <span class=\"number\">1.0</span> + + <span class=\"number\">0.00000000001</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b = %f\\n&quot;</span>, b);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;c = %f\\n&quot;</span>, c);</span><br><span class=\"line\">    <span class=\"type\">int</span> result = b == c;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h2><table>\n<thead>\n<tr>\n<th>优先级</th>\n<th>名称</th>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2</td>\n<td>逻辑非运算符</td>\n<td>!</td>\n<td>单目运算符,具有右结合性</td>\n</tr>\n<tr>\n<td>11</td>\n<td>逻辑与运算符</td>\n<td>&amp;&amp;</td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n<tr>\n<td>12</td>\n<td>逻辑或运算符</td>\n<td><code>||</code></td>\n<td>双目运算符,具有左结合性</td>\n</tr>\n</tbody></table>\n<ul>\n<li>逻辑非</li>\n</ul>\n<ul>\n<li><p>格式: <code>! 条件A;</code></p>\n</li>\n<li><p>运算结果: 真变假,假变真</p>\n</li>\n<li><p>运算过程:</p>\n<ul>\n<li>先判断条件A是否成立，如果添加A成立, 那么结果就为0，即“假”；</li>\n<li>如果条件A不成立，结果就为1，即“真”</li>\n</ul>\n<ul>\n<li>使用注意:</li>\n</ul>\n<ul>\n<li>可以多次连续使用逻辑非运算符</li>\n<li>!!!0;相当于(!(!(!0)));最终结果为1</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ()优先级高, 先计算()里面的内容</span></span><br><span class=\"line\">    <span class=\"comment\">// 10==10为真, 所以result = !(1);</span></span><br><span class=\"line\">    <span class=\"comment\">// !代表真变假, 假变真,所以结果是假0</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = !(<span class=\"number\">10</span> == <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<ul>\n<li><p>逻辑与</p>\n<ul>\n<li>格式: <code>条件A &amp;&amp; 条件B;</code></li>\n<li>运算结果:一假则假</li>\n<li>运算过程:</li>\n</ul>\n<ul>\n<li>总是先判断”条件A”是否成立</li>\n<li>如果”条件A”成立，接着再判断”条件B”是否成立, 如果”条件B”也成立，结果就为1，即“真”</li>\n<li>如果”条件A”成立，”条件B”不成立，结果就为0，即“假”</li>\n<li>如果”条件A”不成立，不会再去判断”条件B”是否成立, 因为逻辑与只要一个不为真结果都不为真</li>\n</ul>\n<ul>\n<li>使用注意:</li>\n</ul>\n<ul>\n<li>“条件A”为假, “条件B”不会被执行</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//               真     &amp;&amp;    真</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = (<span class=\"number\">10</span> == <span class=\"number\">10</span>) &amp;&amp; (<span class=\"number\">5</span> != <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">    <span class=\"comment\">//          假     &amp;&amp;    真</span></span><br><span class=\"line\">    result = (<span class=\"number\">10</span> == <span class=\"number\">9</span>) &amp;&amp; (<span class=\"number\">5</span> != <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 0</span></span><br><span class=\"line\">    <span class=\"comment\">//          真     &amp;&amp;    假</span></span><br><span class=\"line\">    result = (<span class=\"number\">10</span> == <span class=\"number\">10</span>) &amp;&amp; (<span class=\"number\">5</span> != <span class=\"number\">5</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 0</span></span><br><span class=\"line\">    <span class=\"comment\">//          假     &amp;&amp;    假</span></span><br><span class=\"line\">    result = (<span class=\"number\">10</span> == <span class=\"number\">9</span>) &amp;&amp; (<span class=\"number\">5</span> != <span class=\"number\">5</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 逻辑与, 前面为假, 不会继续执行后面</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = (a == <span class=\"number\">9</span>) &amp;&amp; (++b);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b = %i\\n&quot;</span>, b); <span class=\"comment\">// 20</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<ul>\n<li><p>逻辑或</p>\n<ul>\n<li>格式: <code>条件A || 条件B;</code></li>\n<li>运算结果:一真则真</li>\n<li>运算过程:</li>\n</ul>\n<ul>\n<li>总是先判断”条件A”是否成立</li>\n<li>如果”条件A”不成立，接着再判断”条件B”是否成立, 如果”条件B”成立，结果就为1，即“真”</li>\n<li>如果”条件A”不成立，”条件B”也不成立成立, 结果就为0，即“假”</li>\n<li>如果”条件A”成立, 不会再去判断”条件B”是否成立, 因为逻辑或只要一个为真结果都为真</li>\n</ul>\n<ul>\n<li>使用注意:</li>\n</ul>\n<ul>\n<li>“条件A”为真, “条件B”不会被执行</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//               真     ||    真</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = (<span class=\"number\">10</span> == <span class=\"number\">10</span>) || (<span class=\"number\">5</span> != <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">    <span class=\"comment\">//          假     ||    真</span></span><br><span class=\"line\">    result = (<span class=\"number\">10</span> == <span class=\"number\">9</span>) || (<span class=\"number\">5</span> != <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">    <span class=\"comment\">//          真     ||    假</span></span><br><span class=\"line\">    result = (<span class=\"number\">10</span> == <span class=\"number\">10</span>) || (<span class=\"number\">5</span> != <span class=\"number\">5</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">    <span class=\"comment\">//          假     ||    假</span></span><br><span class=\"line\">    result = (<span class=\"number\">10</span> == <span class=\"number\">9</span>) || (<span class=\"number\">5</span> != <span class=\"number\">5</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 逻辑或, 前面为真, 不会继续执行后面</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = (a == <span class=\"number\">10</span>) || (++b);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;result = %i\\n&quot;</span>, result); <span class=\"comment\">// 1</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;b = %i\\n&quot;</span>, b); <span class=\"comment\">// 20</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>练习: 计算result的结果</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> result = <span class=\"number\">3</span>&gt;<span class=\"number\">5</span> || <span class=\"number\">2</span>&lt;<span class=\"number\">4</span> &amp;&amp; <span class=\"number\">6</span>&lt;<span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"三目运算符\"><a href=\"#三目运算符\" class=\"headerlink\" title=\"三目运算符\"></a>三目运算符</h2><ul>\n<li>三目运算符，它需要3个数据或表达式构成条件表达式</li>\n<li>格式: <code>表达式1？表达式2(结果A)：表达式3(结果B)</code></li>\n</ul>\n<ul>\n<li>示例: <code>考试及格 ? 及格 : 不及格;</code></li>\n</ul>\n<ul>\n<li>求值规则:</li>\n</ul>\n<ul>\n<li>如果”表达式1”为真，三目运算符的运算结果为”表达式2”的值(结果A)，否则为”表达式3”的值(结果B)</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例:</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> max = (a &gt; b) ? a : b;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;max = %d&quot;</span>, max);</span><br><span class=\"line\">    输出结果: <span class=\"number\">20</span></span><br><span class=\"line\">等价于:</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&gt;b)&#123;</span><br><span class=\"line\">      max=a;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">       max=b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;max = %d&quot;</span>, max);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意点</li>\n</ul>\n<ul>\n<li>条件运算符的运算优先级低于关系运算符和算术运算符,但高于赋值符</li>\n<li>条件运算符?和:是一个整体,不能分开使用</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 先计算 a &gt; b</span></span><br><span class=\"line\">    <span class=\"comment\">// 然后再根据计算结果判定返回a还是b</span></span><br><span class=\"line\">    <span class=\"comment\">// 相当于int max= (a&gt;b) ? a : b;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> max= a&gt;b ? a : b;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;max = %i\\n&quot;</span>, max); <span class=\"comment\">// 10</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> c = <span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> d = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 结合性是从右至左, 所以会先计算:后面的内容</span></span><br><span class=\"line\">    <span class=\"comment\">// int res = a&gt;b?a:(c&gt;d?c:d);</span></span><br><span class=\"line\">    <span class=\"comment\">// int res = a&gt;b?a:(20&gt;10?20:10);</span></span><br><span class=\"line\">    <span class=\"comment\">// int res = a&gt;b?a:(20);</span></span><br><span class=\"line\">    <span class=\"comment\">// 然后再计算最终的结果</span></span><br><span class=\"line\">    <span class=\"comment\">// int res = 10&gt;5?10:(20);</span></span><br><span class=\"line\">    <span class=\"comment\">// int res = 10;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> res = a&gt;b?a:c&gt;d?c:d;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;res = %i\\n&quot;</span>, res);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><table>\n<thead>\n<tr>\n<th>强制类型转换(显示转换)</th>\n<th>自动类型转换(隐式转换)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>(需要转换的类型)(表达式)</td>\n<td>1.算数转换 2.赋值转换</td>\n</tr>\n</tbody></table>\n<ul>\n<li>强制类型转换(显示转换)</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将double转换为int</span></span><br><span class=\"line\"><span class=\"type\">int</span> a = (<span class=\"type\">int</span>)<span class=\"number\">10.5</span>;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>算数转换<ul>\n<li>系统会自动对占用内存较少的类型做一个“自动类型提升”的操作, 先将其转换为当前算数表达式中占用内存高的类型, 然后再参与运算</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 当前表达式用1.0占用8个字节, 2占用4个字节</span></span><br><span class=\"line\"><span class=\"comment\">// 所以会先将整数类型2转换为double类型之后再计算</span></span><br><span class=\"line\"><span class=\"type\">double</span> b = <span class=\"number\">1.0</span> / <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>赋值转换</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 赋值时左边是什么类型,就会自动将右边转换为什么类型再保存</span></span><br><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">10.6</span>;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意点:</li>\n</ul>\n<ul>\n<li>参与计算的是什么类型, 结果就是什么类型</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 结果为0, 因为参与运算的都是整型</span></span><br><span class=\"line\"><span class=\"type\">double</span> a = (<span class=\"type\">double</span>)(<span class=\"number\">1</span> / <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">// 结果为0.5, 因为1被强制转换为了double类型, 2也会被自动提升为double类型</span></span><br><span class=\"line\"><span class=\"type\">double</span> b = (<span class=\"type\">double</span>)<span class=\"number\">1</span> / <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>类型转换并不会影响到原有变量的值</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> d = <span class=\"number\">3.14</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> num = (<span class=\"type\">int</span>)d;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;num = %i\\n&quot;</span>, num); <span class=\"comment\">// 3</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;d = %lf\\n&quot;</span>, d); <span class=\"comment\">// 3.140000</span></span><br><span class=\"line\">&#125;。</span><br></pre></td></tr></table></figure>\n","feature":false,"text":" 《Code101-C语言基础》目录 先导课 从零到一：你的第一堂C语言入门课 第一课 变量和常量 第二课 printf和scanf 第三课 putchar和g...","permalink":"/post/Code101/004C语言运算符","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"Code101","slug":"Code101","count":5,"path":"api/categories/Code101.json"}],"tags":[{"name":"c/cpp","slug":"c-cpp","count":5,"path":"api/tags/c-cpp.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">运算符基本概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">运算符分类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E5%92%8C%E7%BB%93%E5%90%88%E6%80%A7\"><span class=\"toc-text\">运算符的优先级和结合性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%95%B0%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">算数运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">赋值运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%A2%9E%E8%87%AA%E5%87%8F%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">自增自减运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sizeof%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">sizeof运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%97%E5%8F%B7%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">逗号运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">关系运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">逻辑运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E7%9B%AE%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">三目运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">类型转换</span></a></li></ol>","author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"printf和scanf","uid":"49e2daee4c328ade8673d6b073a536ac","slug":"Code101/002printf和scanf","date":"2025-07-27T16:00:00.000Z","updated":"2025-07-28T14:13:43.585Z","comments":true,"path":"api/articles/Code101/002printf和scanf.json","keywords":null,"cover":"/images/article-cover/Code101.png","text":" 《Code101-C语言基础》目录 先导课 从零到一：你的第一堂C语言入门课 第一课 变量和常量 第二课 printf和scanf 第三课 putchar和g...","permalink":"/post/Code101/002printf和scanf","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"Code101","slug":"Code101","count":5,"path":"api/categories/Code101.json"}],"tags":[{"name":"c/cpp","slug":"c-cpp","count":5,"path":"api/tags/c-cpp.json"}],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"LeetCode-744寻找比目标字母大的最小字母","uid":"1ef7b5c1febefbecd2fae064a2008e72","slug":"LeetCode/LeetCode-744寻找比目标字母大的最小字母","date":"2025-07-23T08:00:00.000Z","updated":"2025-07-28T13:32:29.322Z","comments":true,"path":"api/articles/LeetCode/LeetCode-744寻找比目标字母大的最小字母.json","keywords":null,"cover":null,"text":" 题目链接：LeetCode 744. Find Smallest Letter Greater Than Target 题目描述给定一个递增排序的字符数组 l...","permalink":"/post/LeetCode/LeetCode-744寻找比目标字母大的最小字母","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"LeetCode","slug":"LeetCode","count":8,"path":"api/tags/LeetCode.json"}],"author":{"name":"Random","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"世界上本没有简单题，中等题刷过的人多了，就变成了简单题","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}